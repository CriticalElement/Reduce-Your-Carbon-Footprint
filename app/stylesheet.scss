@use "sass:color";
@use "header.scss" as *;
@use "master.scss" as *;


.headeranimation {
    top: 0;
}

.headeranimationrev {
    top: -10%;
}

.header {
    @include header();
}

.dropdown {
    @include dropdown();
}

.main {

    .section {
        padding: 3.25rem;
        box-sizing: border-box;
        position: relative;
        min-height: max(45rem, 100vh); 
        --offset: 0%;
        --font-size: 15px;
        @media only screen and (max-width: 450px) {
            --offset: 7%;
            --font-size: 12px;
        }
        display: flex;
        justify-content: space-evenly;
        align-items: center;
        flex-direction: column;

        @mixin circle($col, $posleft, $postop) {
            width: 15rem;
            height: 15rem;
            border-radius: 50%;
            background: color.scale($col, $alpha: -60%);
            backdrop-filter: blur(4px);
            position: absolute;
            left: $posleft;
            top: calc($postop - var(--offset));
        }

        @keyframes dropIn {
            from {
                opacity: 0;
                transform: translateY(-60%);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .animation {
            animation: dropIn 2s backwards;
        }

        .circle1 {
            @include circle($accent-1, 9%, 25%);
            z-index: 1;
            animation-delay: 0ms;
        }

        .circle2 {
            @include circle($accent-2, 14%, 17%);
            z-index: 2;
            animation-delay: 500ms;
        }

        .title {
            font-size: clamp(1.8vw, 5vw, 50px);
            text-align: left;
            padding-left: 14rem;
            padding-right: 4rem;
            @media only screen and (max-width: 900px) {
                padding-left: 0rem;
                padding-right: 0rem;
            }
            z-index: 3;
        }

        .text {
            margin-top: 2rem;
            font-size: clamp(var(--font-size), 3vw, 20px);
            font-weight: lighter;
            padding-bottom: 2rem;
            @media only screen and (max-width: 900px) {
                padding-left: 0rem;
                padding-right: 0rem;
            }
            animation-delay: 1500ms;
            z-index: 3;
        }

        .learnmore {
            font-size: clamp(calc(var(--font-size) + 2px), 4vw, 25px);
            animation-delay: 3000ms;
            text-align: center;
            margin-left: 10%;
            margin-right: 10%;
            font-weight: normal;
        }

    }

    & section:nth-child(odd) {
        background: $accent-2-light;
    }

    & section:nth-child(even) {
        background: $accent-1-light;

        .circle1 {
            left: auto;
            right: 9%;
        }

        .circle2 {
            left: auto;
            right: 14%;
        }

        .title {
            padding-left: 4rem;
            padding-right: 14rem;
            @media only screen and (max-width: 900px) {
                padding-left: 0rem;
                padding-right: 0rem;
            }
            text-align: right;
        }

    }

    #home {

        .title, .text {
            padding-left: 10rem;
            padding-right: 10rem;
            @media only screen and (max-width: 900px) {
                padding-left: 0rem;
                padding-right: 0rem;
            } 
        }

        .text {
            margin-top: 0;
            padding-right: 4rem;
            text-align: left;
        }

        .buttoncontainer {
            display: flex;
            align-items: center;
            justify-content: space-evenly;
            height: 4rem;
            max-width: 30rem;

            .mainbuttons {
                @include basicbutton();
                text-decoration: underline;
                animation-fill-mode: forwards;
                animation-delay: calc(4000ms + calc(var(--anim-offset) * 500ms));
                margin-left: 2vw;
                margin-right: 2vw;
                transform: translateY(-10000%); // make sure the buttons can't be clicked before the animation
            }

        }

    }

    @mixin nextpagebutton() {
        @include basicbutton();
        text-decoration: underline;
        animation-fill-mode: forwards;
        animation-delay: 4500ms;
        transform: translateY(-10000%);
    }

    #what {

        .whattowhy {
            @include nextpagebutton();
        }

    }

    #why {

        .whytohow {
            @include nextpagebutton();
        }

    }

    #how {

        .title {
            margin-top: 8rem;
            margin-bottom: 4rem;
        }

        .circle1 {
            top: 14%;
        }

        .circle2 {
            top: 9%;
        }
        
        .howgrid {
            display: grid;
            gap: 2rem 8rem;
            grid-template-columns: 1fr 1fr;
            
            z-index: 4;

            card {
                border-radius: 20px;
                min-width: 15rem;
                max-width: 20rem;
                aspect-ratio: 1/1;
                display: flex;
                flex-direction: column;
                justify-content: space-between;
                padding: 1rem;
                transition: all 200ms ease;
                animation-fill-mode: backwards;

                h2 {
                    margin-bottom: 1rem;
                }

                .spacer {
                    flex-grow: 2;
                }

                .link {
                    color: black;
                    text-decoration: none;
                }
                
                .link:hover {
                    text-decoration: underline;
                }

                .link:visited {
                    color: black;
                }

            }

            card:hover {
                transform: translateY(-5%);
            }

            & card:nth-of-type(odd) {
                background: color.scale($accent-2, $alpha: -60%);
            }

            & card:nth-of-type(even) {
                background: color.scale($accent-1, $alpha: -60%);
            }

            .stepscontainer {
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                position: relative;
                height: 100%;
                min-width: 15rem;
                max-width: 20rem;

                .steps {
                    border-radius: 50%;
                    width: 4rem;
                    height: 4rem;
                    font-size: 40px;
                    background: color.scale($tertiary, $alpha: -60%);
                    display: grid;
                    place-items: center;
                    position: absolute;
                    top: 0;
                    left: 0;
                } 
                
            }

            & .stepscontainer:nth-child(odd) .steps {
                left: auto;
                right: 0;
            }

            & card, .steps {
                animation-delay: calc(2000ms + calc(var(--offset) * 500ms));
            }

            @media only screen and (max-width: 900px) {
                grid-template-columns: 1fr;

                .steps {
                    display: none;
                }

            }

        }

    }

}
